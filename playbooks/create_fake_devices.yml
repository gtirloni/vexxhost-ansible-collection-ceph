# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# NOTE(mnaser): This playbook is strictly used for testing purposes, it creates
#               a few volume groups which can be used to create OSDs.

- name: Create devices for Ceph
  hosts: "{{ ceph_osd_group | default('cephs') }}"
  become: true
  vars:
    ceph_osds: ["osd0", "osd1", "osd2"]
  tasks:
    - name: Install depedencies
      ansible.builtin.package:
        name:
          - dbus
          - lvm2
          - udev
        state: present

    - name: Start up service
      ansible.builtin.service:
        name: systemd-udevd
        state: started
        enabled: true

    - name: Generate lvm.conf
      ansible.builtin.command:
        lvmconfig \
          --mergedconfig \
          --withgeneralpreamble \
          --withspaces \
          --withsummary \
          --withcomments \
          --ignorelocal \
          --showdeprecated \
          --config devices/global_filter='["r|/dev/[sv]d[a-z]+|"]'
      changed_when: false
      register: _lvmconfig

    - name: Write /etc/lvm/lvm.conf
      ansible.builtin.copy:
        content: "{{ _lvmconfig.stdout }}"
        dest: /etc/lvm/lvm.conf

    - name: Create devices for Ceph
      ansible.builtin.command: truncate -s 1024G /opt/{{ item }}.img
      args:
        creates: /opt/{{ item }}.img
      with_items: "{{ ceph_osds }}"

    - name: Get list of all loopback devices
      ansible.builtin.shell: losetup -J
      changed_when: false
      register: _losetup_l

    - name: Start loopback devices for unmapped images
      ansible.builtin.command: losetup -fP /opt/{{ item }}.img
      with_items: "{{ ceph_osds }}"
      when:
        - _losetup_l.stdout | default('{}', true) | from_json | json_query('loopdevices[?"back-file"==`/opt/' + item + '.img`]."back-file"') == None

    - name: Set permissions on loopback devices
      ansible.builtin.file:
        path: /opt/{{ item }}.img
        mode: 0777
      with_items: "{{ ceph_osds }}"

    - name: Get list of all loopback devices
      ansible.builtin.shell: losetup -J
      changed_when: false
      register: _losetup_l

    - name: Create a volume group for each loop device
      community.general.lvg:
        vg: ceph-{{ inventory_hostname_short }}-{{ item['back-file'].split('/')[-1].split('.')[0] }}
        pvs: "{{ item.name }}"
      loop: "{{ _losetup_l.stdout | from_json | json_query('loopdevices[?starts_with(\"back-file\", `/opt/osd`)].{name: name, \"back-file\": \"back-file\"}') }}"
      register: _lvg

    - name: Create a logical volume for each loop device
      community.general.lvol:
        vg: "{{ item.invocation.module_args.vg }}"
        lv: data
        size: 100%FREE
        shrink: false
      loop: "{{ _lvg.results }}"
      loop_control:
        label: "{{ item.invocation.module_args.vg }}"
